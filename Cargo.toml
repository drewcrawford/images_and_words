[package]
name = "images_and_words"
version = "0.1.0"
edition = "2024"
authors = ["Drew Crawford <drew@sealedabstract.com>"]
description = "GPU middleware and abstraction layer for high-performance graphics applications and games"
repository = "https://github.com/drewcrawford/images_and_words"
homepage = "https://sealedabstract.com/code/images_and_words"
license = "Parity-7.0.0 OR PolyForm-Noncommercial-1.0.0"
keywords = ["gpu", "middleware", "graphics", "rendering","wgpu"]
categories = ["game-development","graphics","rendering::engine","rust-patterns"]
exclude = [".*"]
rust-version = "1.85.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
thiserror = "~2"
png = "~0"
tgar = "~1"
some_executor = "0.4"
vectormatrix = "0.1"
vec_parallel = {version = "0.1.0", features = ["some_executor"]}
async_file = "0.1.0"
test_executors = "0.3"
raw-window-handle = "0.6"
continue = {version = "0.1"}
half = "2.6"
portable_async_sleep = "0.1.0"
await_values = "0.1.0"
# optional
app_window = {version = "0.1.0", optional=true}
# used for app_window
send_cells = {version = "0.1", optional=true}
# used for wgpu backend
wgpu = {version = "25", optional = true}

[dev-dependencies]

app_window = {version = "0.1.0", features=["wgpu"]}

[features]
# Create a view based on app_window Surface
app_window = ["dep:app_window","dep:send_cells"]
backend_wgpu = ["dep:wgpu"]
# Enable testing APIs for integration tests
testing = []



[patch.crates-io]
app_window = {path = "e:\\app_window"}